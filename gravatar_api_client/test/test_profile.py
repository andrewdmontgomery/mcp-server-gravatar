# coding: utf-8

"""
    Gravatar Public API

    Gravatar's public API endpoints

    The version of the OpenAPI document: 3.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.profile import Profile

class TestProfile(unittest.TestCase):
    """Profile unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Profile:
        """Test Profile
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Profile`
        """
        model = Profile()
        if include_optional:
            return Profile(
                hash = '',
                display_name = '',
                profile_url = '',
                avatar_url = '',
                avatar_alt_text = '',
                location = '',
                description = '',
                job_title = '',
                company = '',
                verified_accounts = [
                    openapi_client.models.verified_account.VerifiedAccount(
                        service_type = '', 
                        service_label = '', 
                        service_icon = '', 
                        url = '', 
                        is_hidden = True, )
                    ],
                pronunciation = '',
                pronouns = '',
                timezone = '',
                languages = [
                    openapi_client.models.language.Language(
                        code = '', 
                        name = '', 
                        is_primary = True, 
                        order = 56, )
                    ],
                first_name = '',
                last_name = '',
                is_organization = True,
                header_image = '',
                background_color = '',
                links = [
                    openapi_client.models.link.Link(
                        label = '', 
                        url = '', )
                    ],
                interests = [
                    openapi_client.models.interest.Interest(
                        id = 56, 
                        name = '', )
                    ],
                payments = openapi_client.models.profile_payments.Profile_payments(
                    links = [
                        openapi_client.models.link.Link(
                            label = '', 
                            url = '', )
                        ], 
                    crypto_wallets = [
                        openapi_client.models.crypto_wallet_address.CryptoWalletAddress(
                            label = '', 
                            address = '', )
                        ], ),
                contact_info = openapi_client.models.profile_contact_info.Profile_contact_info(
                    home_phone = '', 
                    work_phone = '', 
                    cell_phone = '', 
                    email = '', 
                    contact_form = '', 
                    calendar = '', ),
                gallery = [
                    openapi_client.models.gallery_image.GalleryImage(
                        url = '', 
                        alt_text = '', )
                    ],
                number_verified_accounts = 56,
                last_profile_edit = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                registration_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return Profile(
                hash = '',
                display_name = '',
                profile_url = '',
                avatar_url = '',
                avatar_alt_text = '',
                location = '',
                description = '',
                job_title = '',
                company = '',
                verified_accounts = [
                    openapi_client.models.verified_account.VerifiedAccount(
                        service_type = '', 
                        service_label = '', 
                        service_icon = '', 
                        url = '', 
                        is_hidden = True, )
                    ],
                pronunciation = '',
                pronouns = '',
        )
        """

    def testProfile(self):
        """Test Profile"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
