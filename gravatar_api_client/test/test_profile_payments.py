# coding: utf-8

"""
    Gravatar Public API

    Gravatar's public API endpoints

    The version of the OpenAPI document: 3.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.profile_payments import ProfilePayments

class TestProfilePayments(unittest.TestCase):
    """ProfilePayments unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProfilePayments:
        """Test ProfilePayments
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProfilePayments`
        """
        model = ProfilePayments()
        if include_optional:
            return ProfilePayments(
                links = [
                    openapi_client.models.link.Link(
                        label = '', 
                        url = '', )
                    ],
                crypto_wallets = [
                    openapi_client.models.crypto_wallet_address.CryptoWalletAddress(
                        label = '', 
                        address = '', )
                    ]
            )
        else:
            return ProfilePayments(
                links = [
                    openapi_client.models.link.Link(
                        label = '', 
                        url = '', )
                    ],
                crypto_wallets = [
                    openapi_client.models.crypto_wallet_address.CryptoWalletAddress(
                        label = '', 
                        address = '', )
                    ],
        )
        """

    def testProfilePayments(self):
        """Test ProfilePayments"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
